% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hemibrain_save_split.R
\name{hemibrain_task_update}
\alias{hemibrain_task_update}
\alias{hemibrain_adjust_saved_split}
\title{Manually review split neurons and save your results to a Google Sheet for everyone to use}
\usage{
hemibrain_task_update(
  bodyids,
  update,
  gs = NULL,
  selected_file = "1YjkVjokXL4p4Q6BR-rGGGKWecXU370D1YMc1mgUYr8E",
  column = c("soma.edit", "cut", "truncated", "manual_edit", "splittable", "checked",
    "user", "time", "note", "priority", "edited.cable", "skeletonization")
)

hemibrain_adjust_saved_split(
  bodyids = NULL,
  phases = c("complete", "I", "II", "III"),
  db = NULL,
  check_thresh = 1,
  batch_size = 10,
  by.type = TRUE,
  assignments = TRUE,
  brain = hemibrainr::hemibrain.surf,
  update_regularly = TRUE,
  motivate = TRUE,
  clean = TRUE,
  prioritise = TRUE,
  selected_file = "1YjkVjokXL4p4Q6BR-rGGGKWecXU370D1YMc1mgUYr8E",
  selected_col = "#fadadd",
  ...
)
}
\arguments{
\item{bodyids}{bodyids which specify individual neurons, as used in the relevant neuPrint project}

\item{update}{a vector of \code{length(bodyids)} or \code{1}, which will replace cells in the column specified by \code{column} for given bodyids (\code{bodyids}).
E.g. If I wanted to changed the given bodyids on the task sheet to checked = TRUE, I would use \code{update = TRUE}.}

\item{gs}{A Google sheet object, as read by \code{googlesheets4::read_sheet(selected_file)}.}

\item{selected_file}{an optional path to a yaml file that already contains a selection}

\item{column}{the column in the split-check task's Google Sheet (specified by \code{selected_file}) to be updated with the value of the argument \code{update}.
E.g. If I wanted to changed the given bodyids on the task sheet to checked = TRUE, I would use \code{column = "check"}.}

\item{phases}{which Phases of the split check process you want to engage with. Phase I involves choosing which neurons need to be manually split,
making notes on them and marking if they are truncated by by the volume or not Phase II involves manually splitting those neurons that have been flagged as
as in need to splitting. And Phase III involves reviewing the manual splits that have been made, and re-splitting neurons if needs be. The default, complete,
is to go through all three phases with sequential batches of neurons, of \code{batch_size}.}

\item{db}{a \code{neuronlist} object to act as a database of neuron skeletons. If you want to provide all
hemibrain neurons that could possibly be split, then you can use \code{\link{hemibrain_download_neurons}} to download
all hemibrain neurons as a \code{nat::neuronlistfh} file. All neurons can be read
using \code{db = hemibrain_read_neurons(savedir=TRUE)}. This can then be given as the argument to \code{db}.}

\item{check_thresh}{when checking skeleton splits and correcting them, we do not want to look at skeletons that have already been checked by others many times.
If a skeleton has already been checked by this many users or more, it will not be given to the user to edit.}

\item{batch_size}{when reviewing splits for hemibrain neurons, we examine neurons (or putative cell_types, see parameter \code{by.type}) in batches of this size. We then go through two phases,
choosing neurons that are incorrect in some way (wrongly split, cropped) and then editing them manually, before saving them to a Google Sheet.
You may not have access to this Google Sheet, in which case you will not be able to contribute manual splits for neurons to this package. Contact us
if you would like access.}

\item{by.type}{logical. If \code{TRUE} then putative cell_types (as assigned as the type field in neuPrint) of neurons are presented. The number of cell_types pulled
are of size \code{batch_size}.}

\item{assignments}{logical. If TRUE then the user is invited to examine only neurons that they are flagged for them. These are entries into the 'roots' tab of the Google Sheet,
where the user column is the same as the initials the user enters.}

\item{brain}{which brain to plot while splitting neuron. If \code{NULL} no brain is plotted. Otherwise
it is recommended to use \code{hemibrain.surf} (which is in raw voxel space).}

\item{update_regularly}{whether or not to read from the Google Sheet database regularly, to avoid duplicating manual splits. Should be set to \code{TRUE} unless
reading the Google Sheet introduces a prohibitive time delay.}

\item{motivate}{whether or not to plot 2D motivationals from \href{(https://inspirobot.me/)}{InspiroBot} to keep to entertained while splitting neurons.}

\item{clean}{whether or not to set synapse-less branches to \code{Label = 0}.}

\item{prioritise}{whether or not to look at higher priority neurons first. Initial, this means olfactory system neurons.}

\item{selected_col}{the color in which selected neurons (such as those specified in selected_file) should be plotted}

\item{...}{additional arguments passed to plotting functions, such as \code{plot3d_split} and \code{nlscan_split}}
}
\value{
Updates a Google Sheet which records whether neurons have been checked in one tab ("roots") and records actual manually made splits in a second tab ("manual").
}
\description{
A 3D interactive pipeline for reviewing our \code{\link{hemibrain_precomputed_splitpoints}}. Each user can
manually edit neurons if needs be, add whether or not they have a soma or are cropped, and make additional notes. The purpose of this
function if for interested users to work together to curate axon-dendrite splits suggested by the \code{\link{flow_centrality}} algorithm.
Currently, this function is built to review our most promising set of split points (\code{\link{hemibrain_splitpoints_polypre_centrifugal_synapses}}).
As the Google sheet gets updated, new manual splits will be re-saved into this package, as \code{hemibrain_manual_splitpoints} and implemented as default for those neurons
when using \code{\link{hemibrain_flow_centrality}} and \code{\link{hemibrain_read_neurons}}.For this function to work, you may have to add
the \href{https://docs.google.com/spreadsheets/d/1YjkVjokXL4p4Q6BR-rGGGKWecXU370D1YMc1mgUYr8E/edit?usp=sharing}{Google Sheet database} to your Google Drive.
}
\details{
the pipeline works in three phases and you choose to take a batch_size of X neurons/types (defaults to 10) through these stages:
\itemize{
\item{Phase I}{ - choose which neurons are okay and which need modifying /
are truncated / are unsplittable / have a bad soma, etc.}
\item{Phase II}{ - manually edit those neurons that need modifying. Top tip:
You can ‘cycle’ through branches and update them to a certain cable type one
at a time. This works by removing the primary neurite and linker,
so it is good to define these first for a neuron, and then cycle
through branches as a quick way to assign axon/dendrite.}
\item{Phase III}{ - Review manually modified neurons.}
}
If you have authentication issues with the Google sheet, look \href{(https://googlesheets4.tidyverse.org/articles/articles/auth.html)}{here} first.
Video tutorial: \url{https://drive.google.com/open?id=1FB7m1QFKApysO74maHAx-yg2CQWkx49C}
}
\examples{
\donttest{
\dontrun{
# Assign mPN review to Nik Drummond (ND)
hemibrain_task_update(bodyids = mpn.ids, column = "user", update = "ND")

# Assign members of the FlyConnectome group to work on their favourite neurons:
ton.batches = split(hemibrainr::ton.ids,
  ceiling(seq_along(1:length(hemibrainr::ton.ids))/2700))
hemibrain_task_update(bodyids =
  c(hemibrainr::upn.ids, hemibrainr::mpn.ids, hemibrainr::orn.ids),
  column = "user", update = "ND")
hemibrain_task_update(bodyids = hemibrainr::dan.ids, column = "user", update = "GD")
hemibrain_task_update(bodyids = c(hemibrainr::vppn.ids,hemibrainr::hrn.ids),
  column = "user", update = "RT")
hemibrain_task_update(bodyids = hemibrainr::alln.ids, column = "user", update = "TS")
hemibrain_task_update(bodyids = hemibrainr::mbon.ids, column = "user", update = "MWP")
hemibrain_task_update(bodyids = ton.batches[[1]], column = "user", update = "AJ")
hemibrain_task_update(bodyids = ton.batches[[2]], column = "user", update = "IT")
hemibrain_task_update(bodyids = ton.batches[[3]], column = "user", update = "JH")
}}
\donttest{
\dontrun{
# Plot splits to check them, correcting any errors, and saving your changes
nat::nopen3d()
hemibrain_adjust_saved_split()

# In order to read neurons more quickly from a local source / Google Drive
db = hemibrain_neurons()
nat::nopen3d()
hemibrain_adjust_saved_split(db=db)

# We can also try to correct somas en masse
nat::nopen3d()
hemibrain_adjust_saved_somas()
}}
}
