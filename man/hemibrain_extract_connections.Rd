% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hemibrain_synapses.R
\name{hemibrain_extract_synapses}
\alias{hemibrain_extract_synapses}
\alias{hemibrain_extract_connections}
\alias{hemibrain_extract_compartment_edgelist}
\title{Extract synapse location and labels, and edgelists from a neuron/neuronlist}
\usage{
hemibrain_extract_synapses(x, prepost = c("BOTH", "PRE", "POST"), ...)

hemibrain_extract_connections(
  x,
  prepost = c("BOTH", "PRE", "POST"),
  meta = NULL,
  ...
)

hemibrain_extract_compartment_edgelist(x, meta = NULL, ...)
}
\arguments{
\item{x}{a \code{nat::neuronlist} or \code{nat::neuron} object. It is assumed
that this neuron has been read in by
\code{neuprintr::neuprint_read_neurons} or possibly
\code{catmaid::read.neurons.catmaid}.}

\item{prepost}{whether to get presynapses, postsynapses or both}

\item{...}{Additional arguments passed to methods or eventually to
\code{nat::\link{nlapply}}}

\item{meta}{a data frame giving neuron metrics (i.e. as generated by \code{hemibrain_compartment_metrics}) and transmitter predictions (column \code{top_nt}) for the neurons supplied to these functions.}
}
\value{
a \code{data.frame}. Depending on which synapse function was called, it can contain the columns:

\itemize{

  \item{"treenode_id"} { - the position of the node in the SWC-style table found at \code{neuron$d}, where the neuron is the skeleton for \code{bodyid}.}

  \item{"connector_id"}{ - the unique ID for a pre/post synapse, as read from neuPrint. If this is not given, you are looking at a connection not a synapse.
  In this case \code{count} should be given, which shows the number of synapses in this connection.}

  \item{"prepost"}{ - whether the given synapse is a pre-synapse (0, output synapse) or postsynapse (1, input synapse). Alternatively, if a connection is given,
  whether this connection is presynaptic to \code{bodyid} (0, \code{bodyid} is target) or postsynaptic (1, \code{bodyid} is source).}

  \item{"x"}{ - x coordinate for the root point.}

  \item{"y"}{ - y coordinate for the root point.}

  \item{"z"}{ - z coordinate for the root point.}

  \item{"confidence"}{ - FlyEM's confidence level. The lower the score, the more likely this synapse is an artefact.}

  \item{"bodyid"}{ - The neuPrint neuron/body related to the synapse/connection given in each row.}

  \item{"partner"}{ - The neuron connecting to \code{bodyid} by the given synapse/connection.}

  \item{"pre"}{ - The body ID for the presynaptic (source) neuron.}

  \item{"partner"}{ - The body ID for the presynaptic (target) neuron.}

  \item{"Label"}{ - The compartment of the \code{bodyid} neuron on which the synapse is placed / which receives/makes the given connection.
  See \code{?standardise}.}

  \item{"partner_Label"}{ - The compartment of the \code{partner} neuron on which the synapse is placed / which receives/makes the given connection.}

  \item{"count"}{ - The number of synapses that make the given connection. Sometimes referred to as 'weight'.}

  \item{"norm"}{ - The normalised synapse weight. \code{count} is divided by the total number of inputs that the
  target neuron's (\code{post}) compartment (\code{Label}) has. I.e. this normalisation is by total_inputs onto a dendrite or axon, not the whole neuron.}

  \item{"connection"}{ - The type of compartment-compartment connection specified by this row. The first compartment is the source (pre), the second, the target (post).}

}
}
\description{
Extract a single data frame describing synapse/connection types,
  partners, locations and position on a neuron's axon/dendrite. You can
  either get all synapses returned or all unitary connections to a neuron's
  partners returned. Broken down by axon/dendrite (\code{Label}), and
  pre/postsynapses or pre/postsynaptic partners. Note that \code{hemibrain_extract_compartment_edgelist} will
  only return connections between neurons given in the argument \code{x}.
}
\examples{
\dontrun{
# Choose bodyids
some.pns  = sample(pn.ids, 20)

# Read in these neurons
neurons = neuprintr::neuprint_read_neurons(some.pns)

# Re-root
neurons.flow = flow_centrality(neurons,
polypre = TRUE,
mode = "centrifugal", split = "distance")

# Let's check that this worked
syns = hemibrain_extract_synapses(neurons.flow)

# Get the edgelist by compartment
elist = hemibrain_extract_compartment_edgelist(neurons.flow)

# See result
library(nat)
plot3d_split(neuron.flow)
points3d(xyzmatrix(subset(syns,prepost==1)), col = "cyan")
points3d(xyzmatrix(subset(syns,prepost==0)), col = "red")
}
}
\seealso{
\code{\link{flow_centrality}}
}
