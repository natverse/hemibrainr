% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/flywire_matching.R, R/hemibrain_matching.R
\name{flywire_matching_rewrite}
\alias{flywire_matching_rewrite}
\alias{hemibrain_add_made_matches}
\alias{hemibrain_matching_add}
\alias{hemibrain_matching_transfers}
\alias{fafb_matching_rewrite}
\alias{hemibrain_matching_rewrite}
\alias{flycircuit_matching_rewrite}
\title{Manage hemibrain-FAFB neuron matches}
\usage{
flywire_matching_rewrite(
  flywire.ids = names(flywire_neurons()),
  meta = flywire_neurons()[, ],
  catmaid.update = TRUE,
  selected_file = options()$hemibrainr_matching_gsheet,
  reorder = FALSE,
  top.nblast = FALSE,
  nblast = NULL,
  ...
)

hemibrain_add_made_matches(
  df,
  direction = c("both", "hemibrain-FAFB", "FAFB-hemibrain", "hemisphere"),
  User = "flyconnectome",
  selected_file = options()$hemibrainr_matching_gsheet,
  ...
)

hemibrain_matching_add(
  ids = NULL,
  meta = NULL,
  dataset = c("hemibrain", "FAFB", "CATMAID", "flywire", "lm"),
  User = dataset,
  selected_file = options()$hemibrainr_matching_gsheet,
  ...
)

hemibrain_matching_transfers(
  selected_file = options()$hemibrainr_matching_gsheet
)

fafb_matching_rewrite(
  selected_file = options()$hemibrainr_matching_gsheet,
  top.nblast = FALSE,
  reorder = FALSE,
  nblast = NULL,
  ...
)

hemibrain_matching_rewrite(
  ids = NULL,
  selected_file = options()$hemibrainr_matching_gsheet,
  top.nblast = FALSE,
  meta = NULL,
  nblast.hemibrain.catmaid = NULL,
  nblast.hemibrain.flywire = NULL,
  ...
)

flycircuit_matching_rewrite(
  flycircuit.ids = names(flycircuit_neurons()),
  meta = flycircuit_neurons[, ],
  selected_file = options()$hemibrainr_matching_gsheet
)
}
\arguments{
\item{flywire.ids}{flywire IDs to add to Google sheet if not already present.}

\item{meta}{meta data for the given flycircuit IDs.}

\item{catmaid.update}{logical. Whether or not to update \code{flywire.xyz} and \code{flywire.id} columns, based on e CATMAID neuron specified by a \code{skid} column.}

\item{selected_file}{Specifies which Google Sheet to use. Unless you are using a personal Google Sheet, this should be \code{options()$hemibrainr_matching_gsheet}.}

\item{reorder}{logical. Whether or not to re-write the sheet so that it is ordered by hemilineage.}

\item{top.nblast}{logical. Whether or not to also give the top NBLAST match for each entry.}

\item{nblast}{if \code{top.nblast} is \code{TRUE} this nblast matrix is used to update the column \code{top.nblast}. If set to \code{NULL} defaults to using \code{hemibrain_nblast}. Columns should be hemibrain neurons, and rows the other data set.}

\item{...}{arguments passed to methods for, for example, \code{neuprintr::neuprint_get_meta} and \code{elmr::fafb_get_meta}.}

\item{df}{a \code{data.frame} of pre-made matches that the user wants to transfer onto the Google Sheet. This will erase any extant matches for the specified neurons. This data frame
must have columns: bodyid (i.e. the hemibrain neuron), skid (i.e. the FAFB neuron) and quality (i.e. match quality). Matches have three levels of 'quality', largely dependent on the degree of manual tracing for FAFB neurons
 - good (could be the same cell), medium (same cell type) and poor (could be the same or similar cell type).}

\item{direction}{the match direction, i.e. hemibrain->FAFB (hemibrain tab) or FAFB->hemibrain (fafb tab). Defaults to updating both.}

\item{User}{your initials, so updates can be linked to you. There is a limited number of users, each of whom have been
assigned a number of neurons to match up. In order to add yourself as a user,
simply open this Google Sheet in your browser and add your initials to neurons of your choosing on the rightmost column 'Users'.}

\item{ids}{either hemibrain bodyids or FAFB skids to add to a Google Sheet. You will want to add IDs where they do not already exist, so that
you can use, for example, \code{\link{hemibrain_matching}}.}

\item{dataset}{the tab to which to add your new information. You are either adding to information related to hemibrain neurons, or FAFB neurons.}

\item{nblast.hemibrain.catmaid}{if \code{top.nblast} is \code{TRUE} this nblast matrix is used to update the column \code{top.nblast}. If set to \code{NULL} defaults to using \code{hemibrain_nblast}. Columns should be hemibrain neurons, and rows CATMAID neurons.}

\item{nblast.hemibrain.flywire}{if \code{top.nblast} is \code{TRUE} this nblast matrix is used to update the column \code{top.nblast}. If set to \code{NULL} defaults to using \code{hemibrain_nblast}. Columns should be hemibrain neurons, and rows flywire neurons.}

\item{flycircuit.ids}{flycircuit IDs to add to Google sheet if not already present.}
}
\value{
\code{NULL}. Updates the master Google sheet.
}
\description{
We can match neurons in the hemibrain data with FAFB neurons (hemibrain->FAFB, hemibrain tab) and
FAFB neurons have been matched with their hemibrain counterparts (FAFB->hemibrain, fafb tab). These matches are recorded on a
\href{https://docs.google.com/spreadsheets/d/1OSlDtnR3B1LiB5cwI5x5Ql6LkZd8JOS5bBr-HTi0pOw/edit#gid=0}{Google
  Sheet} on our hemibrain Google Team Drive, to which you will need access
through an authenticated account to view and use this function. We can use these function to manipulate the Google Sheet.
This include adding new IDs for matching (\code{hemibrain_matching_add}), transfer matches between the sheet's hemibrain and FAFB tabs (\code{hemibrain_matching_transfers})
and add pre-made matches (\code{hemibrain_add_matches}).The function \code{lywire_matching_rewrite} updates a Google sheet with correct flywire IDs and stable
locations in flywire space, based on CATMAID skids.
}
\details{
Currently, information is recorded in a
  \href{https://docs.google.com/spreadsheets/d/1OSlDtnR3B1LiB5cwI5x5Ql6LkZd8JOS5bBr-HTi0pOw/edit#gid=0}{Google
   Sheet}
}
\examples{
\donttest{
\dontrun{

# Add a mising FAFB projection neuron, so we can match it later:
hemibrain_matching_add(ids = "16", dataset = "FAFB", User = "ASB")


}}
}
\seealso{
\code{\link{hemibrain_matching}}, \code{\link{fafb_matching}}
}
